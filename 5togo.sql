-- 1. Ștergere user dacă există (dacă ai drepturi să faci asta)
BEGIN
   EXECUTE IMMEDIATE 'DROP USER FIVE_TO_GO CASCADE';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -1918 THEN RAISE; END IF; -- -1918 = userul nu există
END;
/
COMMIT;

-- 2. Creare user/schema și drepturi
CREATE USER FIVE_TO_GO IDENTIFIED BY Castravete1
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON USERS;

GRANT CONNECT, RESOURCE TO FIVE_TO_GO;
GRANT UNLIMITED TABLESPACE TO FIVE_TO_GO;
GRANT CREATE SESSION, CREATE TABLE, CREATE PROCEDURE TO FIVE_TO_GO;

-- 3. Setare sesiune în schema FIVE_TO_GO
ALTER SESSION SET CURRENT_SCHEMA = FIVE_TO_GO;

-- 4. Creare tabele
CREATE TABLE users (
    id NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) UNIQUE NOT NULL,
    password VARCHAR2(255) NOT NULL,
    role VARCHAR2(10) DEFAULT 'client' CHECK (role IN ('client', 'admin')),
    fidelitate_puncte NUMBER DEFAULT 0
);

CREATE TABLE products (
    id NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL UNIQUE,
    price NUMBER(10,2) NOT NULL,
    gramaj NUMBER(10,2) NOT NULL
);

CREATE TABLE ingredients (
    id NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL UNIQUE,
    stock_quantity NUMBER(10,2) NOT NULL CHECK (stock_quantity >= 0),
    minimum_stock NUMBER(10,2),
    unit VARCHAR2(50) NOT NULL
);

CREATE TABLE recipes (
    id NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    product_id NUMBER NOT NULL,
    ingredient_id NUMBER NOT NULL,
    quantity NUMBER(10,2) NOT NULL,
    CONSTRAINT fk_recipe_product FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE,
    CONSTRAINT fk_recipe_ingredient FOREIGN KEY (ingredient_id) REFERENCES ingredients(id) ON DELETE CASCADE
);

CREATE TABLE orders (
    id NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    user_id NUMBER,
    total_price NUMBER(10,2) NOT NULL,
    status VARCHAR2(15) DEFAULT 'pending' CHECK (status IN ('pending', 'completed', 'canceled')),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_order_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL
);

CREATE TABLE order_items (
    id NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    order_id NUMBER NOT NULL,
    product_id NUMBER NOT NULL,
    quantity NUMBER NOT NULL,
    CONSTRAINT fk_orderitem_order FOREIGN KEY (order_id) REFERENCES orders(id) ON DELETE CASCADE,
    CONSTRAINT fk_orderitem_product FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE
);

CREATE TABLE fidelitate_tranzactii (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    data_tranzactie DATE DEFAULT SYSDATE,
    puncte NUMBER NOT NULL,
    descriere VARCHAR2(255),
    CONSTRAINT fk_fidelitate_user FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE locations (
  id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  name VARCHAR2(100) NOT NULL,
  address VARCHAR2(255),
  phone VARCHAR2(20)
);

-- 5. Trigger setare minim stoc (5% din stoc inițial)
CREATE OR REPLACE TRIGGER SET_INITIAL_MINIMUM_STOCK
BEFORE INSERT ON ingredients
FOR EACH ROW
BEGIN
    IF :NEW.minimum_stock IS NULL THEN
        :NEW.minimum_stock := ROUND(:NEW.stock_quantity * 0.05, 2);
    END IF;
END;
/

-- 6. Trigger reducere stoc la inserare comanda
CREATE OR REPLACE TRIGGER REDUCE_STOCK
AFTER INSERT ON order_items
FOR EACH ROW
DECLARE
BEGIN
    FOR ing IN (
        SELECT i.id, r.quantity * :NEW.quantity AS cantitate, i.stock_quantity, i.minimum_stock
        FROM recipes r
        JOIN ingredients i ON r.ingredient_id = i.id
        WHERE r.product_id = :NEW.product_id
    ) LOOP
        IF ing.stock_quantity - ing.cantitate < ing.minimum_stock THEN
            RAISE_APPLICATION_ERROR(-20001, '⚠️ Comanda nu poate fi procesată: ingredientul "' || ing.id || '" a atins stocul minim economic!');
        END IF;
        UPDATE ingredients
        SET stock_quantity = stock_quantity - ing.cantitate
        WHERE id = ing.id;
    END LOOP;
END;
/

-- 7. Procedură scadere stoc produs
CREATE OR REPLACE PROCEDURE scade_stoc_produs(
  p_prodId IN NUMBER,
  p_cantitate IN NUMBER
) AS
BEGIN
  FOR ing IN (
    SELECT i.id, r.quantity
    FROM ingredients i
    JOIN recipes r ON i.id = r.ingredient_id
    WHERE r.product_id = p_prodId
  ) LOOP
    UPDATE ingredients
    SET stock_quantity = stock_quantity - ing.quantity * p_cantitate
    WHERE id = ing.id;
  END LOOP;
  COMMIT;
END;
/

-- 8. Inserare date exemplu
INSERT INTO users (name, email, password, role)
VALUES ('Rebeca', 'rebeca@example.com', '$2b$10$T84d8GpeKlUeX.Rv6U4aE.KIVZZ7OUn2E7I9zZfO3ml4N3ZBaX9p2', 'admin');

INSERT INTO locations (name, address, phone) VALUES ('5 to go Venus', 'Hotel Safir', '0765438921');
INSERT INTO locations (name, address, phone) VALUES ('5 to go Universitatea Româno-Americană', 'Bd.Expoziției', '0765438921');

INSERT INTO ingredients (name, stock_quantity, unit)
SELECT 'Cafea Boabe', 3000, 'g' FROM dual UNION ALL
SELECT 'Lapte', 10000, 'ml' FROM dual UNION ALL
SELECT 'Apă', 15000, 'ml' FROM dual UNION ALL
SELECT 'Gheață', 5000, 'g' FROM dual UNION ALL
SELECT 'Boba Pearls - Căpșuni', 2000, 'g' FROM dual UNION ALL
SELECT 'Sirop Fructe de Pădure', 2000, 'ml' FROM dual UNION ALL
SELECT 'Ness', 1000, 'g' FROM dual UNION ALL
SELECT 'Zahăr', 5000, 'g' FROM dual;

INSERT INTO products (name, price, gramaj)
SELECT 'Cappuccino', 7.00, 250 FROM dual UNION ALL
SELECT 'Espresso', 5.00, 30 FROM dual UNION ALL
SELECT 'Espresso Dublu', 5.00, 60 FROM dual UNION ALL
SELECT 'Caffe Latte', 9.00, 300 FROM dual UNION ALL
SELECT 'Frappe Mic', 10.00, 350 FROM dual UNION ALL
SELECT 'Frappe Mare', 15.00, 500 FROM dual UNION ALL
SELECT 'Iced Coffee Mic', 10.00, 400 FROM dual UNION ALL
SELECT 'Iced Coffee Mare', 15.00, 600 FROM dual UNION ALL
SELECT 'Boba Tea', 15.00, 500 FROM dual UNION ALL
SELECT 'Flat White', 10.00, 250 FROM dual UNION ALL
SELECT 'Mr Big', 11.00, 400 FROM dual UNION ALL
SELECT 'Americano', 5.00, 200 FROM dual;

INSERT INTO recipes (product_id, ingredient_id, quantity)
SELECT (SELECT id FROM products WHERE name = 'Cappuccino'),
       (SELECT id FROM ingredients WHERE name = 'Cafea Boabe'),
       7 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Cappuccino'),
       (SELECT id FROM ingredients WHERE name = 'Lapte'),
       150 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Espresso'),
       (SELECT id FROM ingredients WHERE name = 'Cafea Boabe'),
       7 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Espresso'),
       (SELECT id FROM ingredients WHERE name = 'Apă'),
       30 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Espresso Dublu'),
       (SELECT id FROM ingredients WHERE name = 'Cafea Boabe'),
       14 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Espresso Dublu'),
       (SELECT id FROM ingredients WHERE name = 'Apă'),
       60 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Caffe Latte'),
       (SELECT id FROM ingredients WHERE name = 'Cafea Boabe'),
       7 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Caffe Latte'),
       (SELECT id FROM ingredients WHERE name = 'Lapte'),
       200 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Frappe Mic'),
       (SELECT id FROM ingredients WHERE name = 'Ness'),
       7 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Frappe Mic'),
       (SELECT id FROM ingredients WHERE name = 'Lapte'),
       150 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Frappe Mic'),
       (SELECT id FROM ingredients WHERE name = 'Gheață'),
       100 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Frappe Mare'),
       (SELECT id FROM ingredients WHERE name = 'Ness'),
       14 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Frappe Mare'),
       (SELECT id FROM ingredients WHERE name = 'Lapte'),
       200 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Frappe Mare'),
       (SELECT id FROM ingredients WHERE name = 'Gheață'),
       150 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Iced Coffee Mic'),
       (SELECT id FROM ingredients WHERE name = 'Cafea Boabe'),
       7 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Iced Coffee Mic'),
       (SELECT id FROM ingredients WHERE name = 'Apă'),
       100 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Iced Coffee Mic'),
       (SELECT id FROM ingredients WHERE name = 'Gheață'),
       100 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Iced Coffee Mare'),
       (SELECT id FROM ingredients WHERE name = 'Cafea Boabe'),
       14 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Iced Coffee Mare'),
       (SELECT id FROM ingredients WHERE name = 'Apă'),
       150 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Iced Coffee Mare'),
       (SELECT id FROM ingredients WHERE name = 'Gheață'),
       150 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Boba Tea'),
       (SELECT id FROM ingredients WHERE name = 'Sirop Fructe de Pădure'),
       200 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Boba Tea'),
       (SELECT id FROM ingredients WHERE name = 'Boba Pearls - Căpșuni'),
       100 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Boba Tea'),
       (SELECT id FROM ingredients WHERE name = 'Apă'),
       200 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Flat White'),
       (SELECT id FROM ingredients WHERE name = 'Cafea Boabe'),
       7 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Flat White'),
       (SELECT id FROM ingredients WHERE name = 'Lapte'),
       150 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Mr Big'),
       (SELECT id FROM ingredients WHERE name = 'Cafea Boabe'),
       14 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Mr Big'),
       (SELECT id FROM ingredients WHERE name = 'Lapte'),
       300 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Americano'),
       (SELECT id FROM ingredients WHERE name = 'Cafea Boabe'),
       7 FROM dual
UNION ALL
SELECT (SELECT id FROM products WHERE name = 'Americano'),
       (SELECT id FROM ingredients WHERE name = 'Apă'),
       200 FROM dual;

COMMIT;

-- 9. Exemplu apel procedură scade_stoc_produs
DECLARE
  v_prodId NUMBER;
BEGIN
  SELECT id INTO v_prodId FROM products WHERE name = 'Cappuccino';
  scade_stoc_produs(v_prodId, 1);
END;
/

-- 10. Verificare stoc după apel
SELECT id, name, stock_quantity FROM ingredients ORDER BY id;

-- 11. Alte interogări utile
SELECT * FROM users WHERE role = 'admin';

SELECT email, role FROM users ORDER BY email;
